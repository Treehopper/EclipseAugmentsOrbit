buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.standardout:bnd-platform:1.7.0'
    }
}

apply plugin: 'org.standardout.bnd-platform'

repositories {
    mavenCentral()
    jcenter()
	// mavenLocal()
}

def timestamp = getTimestamp()

// For documentation, see https://github.com/stempler/bnd-platform
platform {
    featureId="eu.hohenegger.orbit.feature"
    featureName="Eclipse Augs Dependencies missing in Eclipse Orbit"
    featureVersion='1.0.2'
    featureProvider="www.hohenegger.eu"
    categoryName="Eclipse Augs Dependencies"
    //updateSiteDir=new File('1.0.2')

	defaultQualifier = "${timestamp}"
    useBndHashQualifiers = false
    useFeatureHashQualifiers = true
    defaultQualifierMap.prefix = ''
    fetchSources = true

    feature(id: 'eu.hohenegger.swagger.dependencies', name: 'Swagger Dependencies', version: '1.0.2') {
		bundle(group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.0.0') {}

		bundle(group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.25.1') {
            exclude group: 'javax.ws.rs', module: 'javax.ws.rs-api'
        }
        bundle(group: 'org.glassfish.jersey.core', name: 'jersey-common', version: '2.25.1') {
            exclude group: 'javax.ws.rs', module: 'javax.ws.rs-api'
        }
		bundle(group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: '2.25.1') {
            exclude group: 'javax.ws.rs', module: 'javax.ws.rs-api'
        }
		bundle(group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.25.1') {
            exclude group: 'javax.ws.rs', module: 'javax.ws.rs-api'
        }
        
		bundle(group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.7.5') {}
		bundle(group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.7.5') {}
		bundle(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.5') {}
		bundle(group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.7.5') {}
        
        // provided dependency of org.glassfish.jersey.core:jersey-server:2.25.1
        bnd(group: 'org.glassfish.jersey.ext', name: 'jersey-entity-filtering') {
            optionalImport 'org.glassfish.jersey.server',
                           'org.glassfish.jersey.server.filter',
                           'org.glassfish.jersey.server.model'
        }
    }

    feature(id: 'eu.hohenegger.liquibase.dependencies', name: 'Liquibase Dependencies', version: '1.0.0') {
		bundle(group: 'org.liquibase', name: 'liquibase-core', version: '3.8.4') {
            // we get all of these from eclipse orbit
            exclude group: 'org.slf4j', module: 'slf4j-api'
            exclude group: 'org.yaml', module: 'snakeyaml'
            exclude group: 'javax.xml.bind', module: 'jaxb-api'

            // we don't need these
            exclude group: 'ch.qos.logback', module: 'logback-classic'
            exclude group: 'ch.qos.logback', module: 'logback-core'
        }

        bnd(group: 'org.liquibase', name: 'liquibase-core') {
            optionalImport 'ch.qos.logback.classic',
                           'ch.qos.logback.classic.encoder',
                           'ch.qos.logback.classic.spi',
                           'ch.qos.logback.core',
                           'ch.qos.logback.core.encoder',
                           'ch.qos.logback.core.filter',
                           'ch.qos.logback.core.joran.spi',
                           'ch.qos.logback.core.spi',
                           'com.datical.liquibase.ext.appdba.markunused.change',
                           'com.datical.liquibase.ext.appdba.synonym',
                           'com.datical.liquibase.ext.appdba.synonym.change',
                           'com.datical.liquibase.ext.config',
                           'com.datical.liquibase.ext.license',
                           'com.datical.liquibase.ext.storedlogic',
                           'com.datical.liquibase.ext.storedlogic.checkconstraint',
                           'com.datical.liquibase.ext.storedlogic.checkconstraint.change',
                           'com.datical.liquibase.ext.storedlogic.checkconstraint.postgres',
                           'com.datical.liquibase.ext.storedlogic.databasepackage',
                           'com.datical.liquibase.ext.storedlogic.databasepackage.change',
                           'com.datical.liquibase.ext.storedlogic.function',
                           'com.datical.liquibase.ext.storedlogic.function.change',
                           'com.datical.liquibase.ext.storedlogic.function.postgres',
                           'com.datical.liquibase.ext.storedlogic.trigger',
                           'com.datical.liquibase.ext.storedlogic.trigger.change',
                           'com.datical.liquibase.ext.storedlogic.trigger.postgres',
                           'com.datical.liquibase.ext.util',
                           'edu.umd.cs.findbugs.annotations',
                           'javax.annotation',
                           'javax.crypto',
                           'javax.crypto.spec',
                           'javax.naming',
                           'javax.security.auth.x500',
                           'javax.servlet',
                           'javax.servlet.http',
                           'javax.sql',
                           'javax.swing',
                           'javax.xml.parsers',
                           'javax.xml.transform',
                           'javax.xml.transform.dom',
                           'javax.xml.transform.stream',
                           'javax.xml.validation',
                           'liquibase',
                           'liquibase.change',
                           'liquibase.change.core',
                           'liquibase.changelog',
                           'liquibase.changelog.column',
                           'liquibase.changelog.filter',
                           'liquibase.changelog.visitor',
                           'liquibase.command',
                           'liquibase.command.core',
                           'liquibase.configuration',
                           'liquibase.database',
                           'liquibase.database.core',
                           'liquibase.database.jvm',
                           'liquibase.datatype',
                           'liquibase.datatype.core',
                           'liquibase.dbdoc',
                           'liquibase.diff',
                           'liquibase.diff.compare',
                           'liquibase.diff.compare.core',
                           'liquibase.diff.output',
                           'liquibase.diff.output.changelog',
                           'liquibase.diff.output.changelog.core',
                           'liquibase.diff.output.report',
                           'liquibase.exception',
                           'liquibase.executor',
                           'liquibase.executor.jvm',
                           'liquibase.integration.ant.logging',
                           'liquibase.integration.ant.type',
                           'liquibase.io',
                           'liquibase.license',
                           'liquibase.listener',
                           'liquibase.lockservice',
                           'liquibase.logging',
                           'liquibase.logging.core',
                           'liquibase.osgi',
                           'liquibase.parser',
                           'liquibase.parser.core',
                           'liquibase.parser.core.xml',
                           'liquibase.parser.core.yaml',
                           'liquibase.precondition',
                           'liquibase.precondition.core',
                           'liquibase.resource',
                           'liquibase.sdk.convert',
                           'liquibase.sdk.database',
                           'liquibase.sdk.exception',
                           'liquibase.serializer',
                           'liquibase.serializer.core.json',
                           'liquibase.serializer.core.string',
                           'liquibase.serializer.core.xml',
                           'liquibase.serializer.core.yaml',
                           'liquibase.servicelocator',
                           'liquibase.snapshot',
                           'liquibase.snapshot.jvm',
                           'liquibase.sql',
                           'liquibase.sql.visitor',
                           'liquibase.sqlgenerator',
                           'liquibase.sqlgenerator.core',
                           'liquibase.statement',
                           'liquibase.statement.core',
                           'liquibase.structure',
                           'liquibase.structure.core',
                           'liquibase.util',
                           'liquibase.util.beans',
                           'liquibase.util.csv',
                           'liquibase.util.csv.opencsv',
                           'liquibase.util.csv.opencsv.enums',
                           'liquibase.util.csv.opencsv.stream.reader',
                           'liquibase.util.file',
                           'liquibase.util.grammar',
                           'liquibase.util.ui',
                           'liquibase.util.xml',
                           'org.apache.commons.cli',
                           'org.apache.tools.ant',
                           'org.apache.tools.ant.taskdefs',
                           'org.apache.tools.ant.types',
                           'org.apache.tools.ant.types.resources',
                           'org.apache.tools.ant.util',
                           'org.osgi.framework',
                           'org.osgi.framework.wiring',
                           'org.springframework.beans.factory',
                           'org.springframework.context',
                           'org.springframework.core.io',
                           'org.springframework.core.io.support',
                           'org.w3c.dom',
                           'org.xml.sax',
                           'org.xml.sax.ext',
                           'org.xml.sax.helpers',
                           'org.apache.log'

            // Actually needed:
            // 'org.slf4j'
            // 'javax.activation'
            // 'javax.xml.bind'
            // 'javax.xml.bind.annotation'
            // 'javax.xml.bind.annotation.adapters'
            // 'org.yaml.snakeyaml'
            // 'org.yaml.snakeyaml.constructor'
            // 'org.yaml.snakeyaml.introspector'
            // 'org.yaml.snakeyaml.nodes'
            // 'org.yaml.snakeyaml.representer'
            // 'org.yaml.snakeyaml.resolver'
        }
    }

    override {
        optionalImport 'junit.framework.*', 'org.junit.*', //only for tests
                       'org.apache.log'
    }

    // If you have an Eclipse installation available, you may want to set the env. variable
    // ECLIPSE_HOME with its path, that will prevent the BND plugin to download it.
    // if ( System.getenv("ECLIPSE_HOME") != null )
    //     eclipseHome = new File("System.getenv("ECLIPSE_HOME")")
}
def getTimestamp() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

defaultTasks 'clean', 'updateSite'